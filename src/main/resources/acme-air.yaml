openapi: 3.0.0
info:
  title: Flight Booking API
  version: 1.0.0
  description: Contract-first API for searching and booking flights.

tags:
  - name: flights
    description: Flight search operations
  - name: bookings
    description: Flight booking operations

paths:
  /api/v1/flights/search:
    get:
      tags:
        - flights
      summary: Search for available flights
      operationId: searchFlights
      parameters:
        - name: origin
          in: query
          required: true
          schema:
            type: string
          description: Departure airport IATA code
        - name: destination
          in: query
          required: true
          schema:
            type: string
          description: Arrival airport IATA code
        - name: departureDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Departure date in YYYY-MM-DD format
        - name: returnDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Return date for round-trip in YYYY-MM-DD format
        - name: passengers
          in: query
          required: true
          schema:
            type: integer
          description: Number of passengers
      responses:
        '200':
          description: List of available flights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightsResponseWrapper'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/v1/bookings:
    post:
      tags:
        - bookings
      summary: Create a new flight booking
      operationId: createBooking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponseWrapper'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    ApiResponse:
      type: object
      properties:
        status:
          type: string
          enum: [SUCCESS]
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: [ERROR]
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string

    FlightsResponseWrapper:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/FlightSearchResponse'

    BookingResponseWrapper:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BookingResponse'

    FlightSearchResponse:
      type: object
      properties:
        flights:
          type: array
          items:
            $ref: '#/components/schemas/FlightDTO'

    FlightDTO:
      type: object
      properties:
        flightScheduleId:
          type: integer
          format: int64
        flightNumber:
          type: string
        airline:
          type: string
        origin:
          type: string
        destination:
          type: string
        departureTime:
          type: string
          format: date-time
        arrivalTime:
          type: string
          format: date-time
        pricePerSeat:
          type: number
          multipleOf: 0.01
        numberOfPassengers:
          type: integer
        totalPrice:
          type: number
          multipleOf: 0.01
        availableSeats:
          type: integer
        availableSeatNumbers:
          type: array
          items:
            type: string
          description: List of available seat numbers for this flight

    BookingRequest:
      type: object
      required: [flightScheduleId, passengers, payment]
      properties:
        flightScheduleId:
          type: integer
          format: int64
          description: Flight schedule ID is required
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/PassengerDTO'
          minItems: 1
          description: Passenger details are required
        payment:
          $ref: '#/components/schemas/PaymentInfoDTO'
          description: Payment information is required

    PassengerDTO:
      type: object
      required: [firstName, lastName, email, passportNumber, selectedSeatNumber]
      properties:
        firstName:
          type: string
          minLength: 1
          description: First name is required
        lastName:
          type: string
          minLength: 1
          description: Last name is required
        email:
          type: string
          format: email
          description: Email must be valid
        passportNumber:
          type: string
          minLength: 1
          description: Passport number is required
        selectedSeatNumber:
          type: string
          description: Selected seat number

    PaymentInfoDTO:
      type: object
      required: [method, transactionId, price, status]
      properties:
        method:
          $ref: '#/components/schemas/PaymentMethod'
          description: Payment method is required
        transactionId:
          type: string
          minLength: 1
          description: Transaction ID is required
        price:
          $ref: '#/components/schemas/PriceDTO'
          description: Price information is required
        status:
          $ref: '#/components/schemas/PaymentStatus'
          description: Payment status is required

    PaymentMethod:
      type: string
      enum: [CREDIT_CARD, DEBIT_CARD, PAYPAL]

    PaymentStatus:
      type: string
      enum: [SUCCESS, FAILURE, PENDING]
      description: Status of the payment at the time of booking

    PriceDTO:
      type: object
      required: [amountPaid, currency]
      properties:
        amountPaid:
          type: number
          multipleOf: 0.01
          minimum: 0.01
          description: Amount must be positive with max 2 decimal places
          example: 199.99
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          description: Currency must be a 3-letter ISO code (e.g. NZD)
          example: NZD

    BookingResponse:
      type: object
      properties:
        bookingId:
          type: string
        status:
          type: string
        flightNumber:
          type: string
        departureDate:
          type: string
          format: date
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/PassengerSeatDTO'
        payment:
          $ref: '#/components/schemas/BookingPaymentInfoDTO'
        createdAt:
          type: string
          format: date

    PassengerSeatDTO:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        seatNumber:
          type: string

    BookingPaymentInfoDTO:
      type: object
      properties:
        transactionId:
          type: string
        amountPaid:
          type: number
          multipleOf: 0.01
        currency:
          type: string

  responses:
    BadRequest:
      description: Invalid input or query parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            badRequest:
              summary: Missing required field
              value:
                status: ERROR
                error:
                  code: INVALID_REQUEST
                  message: "Origin and destination are required."
    NotFound:
      description: Resource not found (e.g. flight, booking)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            notFound:
              summary: Flight not found
              value:
                status: ERROR
                error:
                  code: RESOURCE_NOT_FOUND
                  message: "No flight found matching the search criteria."
    Conflict:
      description: Flight unavailable or overbooked
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            conflict:
              summary: Booking conflict
              value:
                status: ERROR
                error:
                  code: BOOKING_CONFLICT
                  message: "The flight's requested seat is no longer available."
    InternalError:
      description: Unexpected server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            internalError:
              summary: Server error
              value:
                status: ERROR
                error:
                  code: INTERNAL_SERVER_ERROR
                  message: "An unexpected error occurred. Please try again later."