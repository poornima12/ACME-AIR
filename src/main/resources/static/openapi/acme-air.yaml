openapi: 3.0.0
info:
  title: Flight Booking API
  version: 1.0.0
  description: Contract-first API for searching and booking flights.

paths:
  /api/v1/flights/search:
    get:
      summary: Search for available flights
      parameters:
        - name: origin
          in: query
          required: true
          schema:
            type: string
          description: Departure airport IATA code
        - name: destination
          in: query
          required: true
          schema:
            type: string
          description: Arrival airport IATA code
        - name: departureDate
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Departure date in YYYY-MM-DD format
        - name: returnDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Return date for round-trip in YYYY-MM-DD format
        - name: passengers
          in: query
          required: true
          schema:
            type: integer
          description: Number of passengers
      responses:
        '200':
          description: List of available flights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightsResponseWrapper'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/bookings:
    post:
      summary: Create a new flight booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponseWrapper'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    ApiResponse:
      type: object
      properties:
        status:
          type: string
          enum: [SUCCESS]
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: [ERROR]
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string

    FlightsResponseWrapper:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                flights:
                  type: array
                  items:
                    $ref: '#/components/schemas/Flight'

    BookingResponseWrapper:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BookingResponse'

    Flight:
      type: object
      properties:
        flightNumber:
          type: string
        airline:
          type: string
        origin:
          type: string
        destination:
          type: string
        departureTime:
          type: string
          format: date-time
        arrivalTime:
          type: string
          format: date-time
        duration:
          type: string
        stops:
          type: integer
        price:
          type: object
          properties:
            amount:
              type: number
              format: double
            currency:
              type: string
        cabinClass:
          type: string
        availableSeats:
          type: integer

    BookingRequest:
      type: object
      required: [flightNumber, departureDate, passenger, paymentInfo]
      properties:
        flightNumber:
          type: string
        departureDate:
          type: string
          format: date
        seatPreference:
          type: string
          enum: [WINDOW, AISLE, MIDDLE]
        passenger:
          type: object
          required: [firstName, lastName, email, phone, dateOfBirth, passportNumber]
          properties:
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
              format: email
            phone:
              type: string
            dateOfBirth:
              type: string
              format: date
            passportNumber:
              type: string
        paymentInfo:
          $ref: '#/components/schemas/PaymentInfo'

    PaymentInfo:
      type: object
      required:
        - method
        - transactionId
        - price
        - status
      properties:
        method:
          type: string
          enum: [CREDIT_CARD, DEBIT_CARD, PAYPAL]
        transactionId:
          type: string
          description: Unique transaction reference from the payment provider
        price:
          $ref: '#/components/schemas/PriceDTO'
        status:
          type: string
          enum: [SUCCESS, FAILURE, PENDING]
          description: Status of the payment at the time of booking

    BookingResponse:
      type: object
      properties:
        bookingId:
          type: string
        status:
          type: string
          enum: [CONFIRMED, PENDING]
        flightNumber:
          type: string
        departureDate:
          type: string
          format: date
        passenger:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
        seat:
          type: string
        price:
          $ref: '#/components/schemas/PriceDTO'
        createdAt:
          type: string
          format: date-time

    PriceDTO:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 199.99
        currency:
          type: string
          example: NZD
      required:
        - amount
        - currency

  responses:
    BadRequest:
      description: Invalid input or query parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            badRequest:
              summary: Missing required field
              value:
                error:
                  code: INVALID_REQUEST
                  message: "Origin and destination are required."
    NotFound:
      description: Resource not found (e.g. flight, booking)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            notFound:
              summary: Flight not found
              value:
                error:
                  code: RESOURCE_NOT_FOUND
                  message: "No flight found matching the search criteria."
    Conflict:
      description: Flight unavailable or overbooked
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            conflict:
              summary: Booking conflict
              value:
                error:
                  code: BOOKING_CONFLICT
                  message: "The flight's requested seat is no longer available."
    InternalError:
      description: Unexpected server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            internalError:
              summary: Server error
              value:
                error:
                  code: INTERNAL_SERVER_ERROR
                  message: "An unexpected error occurred. Please try again later."
